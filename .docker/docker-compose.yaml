services:
  api-gateway:
    build: ../api-gateway
    container_name: api-gateway
    volumes:
      - ../api-gateway:/var/www/html
      - api-gateway-node-modules:/var/www/html/node_modules
    ports:
      - 3000:3000

  auth:
    build: ../auth
    container_name: auth
    volumes:
      - ../auth:/var/www/html
      - auth-node-modules:/var/www/html/node_modules
    depends_on:
      mongodb:
        condition: service_healthy

  products:
    build: ../products
    container_name: products
    volumes:
      - ../products:/var/www/html
      - products-node-modules:/var/www/html/node_modules
    depends_on:
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
    volumes:
      - auth-mongo-data:/data/db
      - products-mongo-data:/data/db
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'mongosh mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/${MONGO_INITDB_DATABASE}?authSource=admin --quiet --eval "db.adminCommand(''ping'').ok" | grep 1',
        ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  auth-mongo-data: {}
  products-mongo-data: {}
  api-gateway-node-modules: {}
  auth-node-modules: {}
  products-node-modules: {}
